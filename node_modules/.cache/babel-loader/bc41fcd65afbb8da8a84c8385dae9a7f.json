{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karlangas\\\\Documents\\\\GitHub\\\\sign-up-form\\\\sign-up-form\\\\src\\\\button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = () => {\n  _s();\n\n  React.useEffect(() => {\n    class CustomTextInput extends React.Component {\n      constructor(props) {\n        super(props); // create a ref to store the textInput DOM element\n\n        this.fN = /*#__PURE__*/React.createRef();\n        this.lN = this.lN.bind(this);\n      }\n\n    }\n\n    focusTextInput = () => {\n      // Explicitly focus the text input using the raw DOM API\n      // Note: we're accessing \"current\" to get the DOM node\n      this.fN.current.focus();\n    };\n\n    const buttonAction = document.querySelector(\".btn\");\n    const fN = document.querySelector(\".fn\");\n    const lN = document.querySelector(\".ln\");\n    buttonAction.addEventListener(\"onClick\", () => {\n      console.log(buttonAction);\n\n      if (fN.value || lN.value != null || undefined || '') {\n        alert(`Is your name ${fN.value} ${lN.value} by any chance?`);\n      }\n    });\n  }, []);\n  const [counter, setCounter] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn\",\n    type: \"button\",\n    onMouseOver: () => setCounter(counter + 1),\n    children: [\"Register now! \", counter, \" hover(s) \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Button, \"mur55b83WrRDFScRCVnceAuJjFI=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/Karlangas/Documents/GitHub/sign-up-form/sign-up-form/src/button.js"],"names":["React","useState","useEffect","Button","CustomTextInput","Component","constructor","props","fN","createRef","lN","bind","focusTextInput","current","focus","buttonAction","document","querySelector","addEventListener","console","log","value","undefined","alert","counter","setCounter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAI;AAAA;;AAEjBH,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAK;AAEnB,UAAME,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC5CC,MAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,cAAMA,KAAN,EADiB,CAEjB;;AACA,aAAKC,EAAL,gBAAUR,KAAK,CAACS,SAAN,EAAV;AACA,aAAKC,EAAL,GAAU,KAAKA,EAAL,CAAQC,IAAR,CAAa,IAAb,CAAV;AACD;;AAN2C;;AAUlDC,IAAAA,cAAc,GAAC,MAAK;AAClB;AACA;AACA,WAAKJ,EAAL,CAAQK,OAAR,CAAgBC,KAAhB;AACD,KAJD;;AAKA,UAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAArB;AACA,UAAMT,EAAE,GAAGQ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACA,UAAMP,EAAE,GAAGM,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAX;AACAF,IAAAA,YAAY,CAACG,gBAAb,CAA8B,SAA9B,EAAyC,MAAI;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;;AACA,UAAGP,EAAE,CAACa,KAAH,IAAYX,EAAE,CAACW,KAAH,IAAY,IAAxB,IAAgCC,SAAhC,IAA6C,EAAhD,EAAmD;AAE/CC,QAAAA,KAAK,CAAE,gBAAef,EAAE,CAACa,KAAM,IAAGX,EAAE,CAACW,KAAM,iBAAtC,CAAL;AACD;AACJ,KAND;AAOC,GA3BC,EA2BC,EA3BD;AA+BA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,CAAD,CAAtC;AAEA,sBAAQ;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,IAAI,EAAE,QAA9B;AAAuC,IAAA,WAAW,EAAG,MAAMwB,UAAU,CAACD,OAAO,GAAG,CAAX,CAArE;AAAA,iCAAoGA,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAED,CArCD;;GAAMrB,M;;KAAAA,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport \"./button.css\"\r\n\r\nconst Button = ()=>{\r\n\r\n  React.useEffect(() =>{\r\n    \r\n    class CustomTextInput extends React.Component {\r\n      constructor(props) {\r\n        super(props);\r\n        // create a ref to store the textInput DOM element\r\n        this.fN = React.createRef();\r\n        this.lN = this.lN.bind(this);\r\n      }\r\n     }\r\n\r\n     \r\nfocusTextInput=()=> {\r\n  // Explicitly focus the text input using the raw DOM API\r\n  // Note: we're accessing \"current\" to get the DOM node\r\n  this.fN.current.focus();\r\n}\r\nconst buttonAction = document.querySelector(\".btn\");\r\nconst fN = document.querySelector(\".fn\");\r\nconst lN = document.querySelector(\".ln\");\r\nbuttonAction.addEventListener(\"onClick\", ()=>{\r\n  console.log(buttonAction)\r\n  if(fN.value || lN.value != null || undefined || ''){\r\n    \r\n      alert(`Is your name ${fN.value} ${lN.value} by any chance?`)\r\n    }\r\n});\r\n}, [])\r\n\r\n\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  \r\n  return (<button className=\"btn\" type =\"button\" onMouseOver= {() => setCounter(counter + 1)} >Register now! {counter} hover(s) </button>\r\n  )\r\n};\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}